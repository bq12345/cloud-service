// Generated by CoffeeScript 1.9.1
(function() {
  var _loading, app;

  app = angular.module('noteApp', ['ngAnimate', 'ngRoute', 'ngSanitize', 'panel-directive']);

  app.config([
    '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
      $routeProvider.when('/', {
        templateUrl: 'partials/note.html',
        controller: NoteCtrl
      });
    }
  ]);

  app.directive('date', function() {
    return {
      restrict: 'E',
      replace: true,
      template: '<span>{{note.date | dateFilter}}</span>'
    };
  });

  app.directive('title', function() {
    return {
      restrict: 'E',
      replace: true,
      template: '<span>{{n.content | lengthFilter}}</span>'
    };
  });

  app.directive('watcher', function() {
    return {
      restrict: 'A',
      scope: {
        wSpeed: "@"
      },
      link: function($scope, el, attrs) {
        var speed;
        el = angular.element(el);
        speed = $scope.wSpeed || .1;
        return $scope.$parent.$watch('note.id', function(e) {
          el.removeClass('show');
          return setTimeout(function() {
            return el.addClass('show');
          }, speed * 1000);
        }, true);
      }
    };
  });

  app.filter('lengthFilter', function() {
    return function(input, param) {
      if (input && input.length > 20) {
        return input.slice(0, 20);
      } else {
        return input;
      }
    };
  });

  app.filter('dateFilter', function() {
    return function(input, param) {
      var date;
      date = new Date(input);
      return (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();
    };
  });

  _loading = $('#loading');

  window.NoteCtrl = [
    '$scope', '$http', '$rootScope', '$location', function($scope, $http, $rootScope, $location, $sce) {
      var _container;
      _container = $('#container');
      _loading.show();
      $scope.notes = [];
      $scope.checkIds = [];
      $scope.paneled = false;
      console.log($rootScope);
      $http.get('/api/notes').success(function(data) {
        _loading.hide();
        _container.css('opacity', 1);
        $scope.origin = data.list;
        $scope.notes = data.list;
        return $scope.note = $scope.notes[0];
      });
      $scope.noteCheck = function($event, n) {
        $event.stopPropagation();
        if (n.checked) {
          n.checked = '';
        } else {
          n.checked = 'on';
        }
        $scope.calculate();
      };
      $scope.showNote = function(n) {
        $scope.edit = false;
        $scope.note = $scope.notes[n.id];
      };
      $scope.calculate = function() {
        $scope.checkNotes = $scope.notes.filter(function(item) {
          return item.checked;
        });
        $scope.checkIds = $scope.checkNotes.map(function(item) {
          return item.id;
        });
        console.log($scope.checkIds);
        if ($scope.checkIds.length > 0) {
          return $scope.selected = true;
        } else {
          return $scope.selected = false;
        }
      };
      $scope.batchDelete = function() {
        $http.post('/api/notes/deletes', {
          ids: $scope.checkIds
        }).success(function(data) {
          return console.log(data);
        });
      };
      $scope.batchCancel = function() {
        if ($scope.checkNotes) {
          $scope.checkNotes.forEach(function(item) {
            return item.checked = false;
          });
          $scope.selected = false;
        } else {

        }
      };
      $scope.noteNew = function() {
        $scope.batchCancel();
        $scope.edit = true;
        return $scope.note = {
          "content": "",
          "date": new Date().getTime()
        };
      };
      $scope.noteEdit = function() {
        return $scope.edit = true;
      };
      $scope.noteSave = function(note) {
        $scope.edit = false;
        $http.post('/api/notes/save', {
          id: JSON.stringify(note)
        }).success(function(data) {
          return console.log(data);
        });
        return console.log($scope.note);
      };
      $scope.noteDelete = function(n) {
        if ($scope.paneled) {
          $scope.paneled = false;
          return $http.post('/api/notes/delete', {
            id: n
          }).success(function(data) {
            return console.log(data);
          });
        } else {
          return $scope.paneled = true;
        }
      };
      $scope.cancelDelete = function(n) {
        return $scope.paneled = false;
      };
      return $scope.noteCancel = function() {
        return $scope.edit = false;
      };
    }
  ];

}).call(this);

//# sourceMappingURL=note.js.map
