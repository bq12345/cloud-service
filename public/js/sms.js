// Generated by CoffeeScript 1.9.1

/*!
  Copyright Â© 2015. All rights reserved.
  @file sms.coffee
  @author baiqiang
  @version 1-0-0
 */

(function() {
  var _loading, app;

  app = angular.module('smsApp', ['ngAnimate', 'ngRoute', 'ngSanitize']);

  app.config([
    '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
      $routeProvider.when('/', {
        templateUrl: 'partials/sms.html',
        controller: SmsCtrl
      });
    }
  ]);

  app.directive('date', function() {
    return {
      restrict: 'E',
      replace: true,
      template: '<span>{{msg.date | dateFilter}}</span>'
    };
  });

  app.filter('dateFilter', function() {
    return function(input, param) {
      var date;
      date = new Date(input);
      return (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();
    };
  });

  _loading = $('#loading');

  window.SmsCtrl = [
    '$scope', '$http', '$location', function($scope, $http, $location, $sce) {
      var _container;
      _container = $('#container');
      _loading.show();
      $scope.persons = [];
      $scope.checkIds = [];
      $http.get('/api/messages').success(function(data) {
        $scope.persons = data.persons;
        return $scope.p = $scope.persons[0];
      });
      $http.get('/api/messages/detail').success(function(data) {
        _loading.hide();
        _container.css('opacity', 1);
        return $scope.sms = data.sms;
      });
      $scope.smsShow = function(p) {
        $scope.p = p;
        return $http.get('/api/messages/detail').success(function(data) {
          return $scope.sms = data.sms;
        });
      };
      $scope.personCheck = function(e, p) {
        if (p.checked) {
          p.checked = '';
        } else {
          p.checked = 'on';
        }
        return $scope.calculate();
      };
      $scope.calculate = function() {
        $scope.checkedPersons = $scope.persons.filter(function(item) {
          return item.checked;
        });
        $scope.checkIds = $scope.checkedPersons.map(function(item) {
          return item.id;
        });
        console.log($scope.checkIds);
        if ($scope.checkIds.length > 0) {
          return $scope.selected = true;
        } else {
          return $scope.selected = false;
        }
      };
      $scope.batchCancel = function() {
        if ($scope.checkedPersons) {
          $scope.checkedPersons.forEach(function(item) {
            return item.checked = '';
          });
        }
        $scope.checkedAll = '';
        return $scope.selected = false;
      };
      $scope.batchDelete = function() {
        $scope.batchCancel();
        return $http.post('/api/sms/deletes', {
          ids: $scope.checkIds
        }).success(function(data) {
          return console.log(data);
        });
      };
      return $scope.msgDelete = function(msg) {
        console.log(msg);
        return $http.get('/api/sms/delete').success(function(data) {
          return $scope.sms = data.sms;
        });
      };
    }
  ];

}).call(this);

//# sourceMappingURL=sms.js.map
